#Goldman Sachs
2327. Number of People Aware of a Secret

class Solution:
    def peopleAwareOfSecret(self, n: int, delay: int, forget: int) -> int:
        dp = [1] + [0] * (n - 1)
       
        mod = 10 ** 9 + 7
        share = 0
        for i in range(1, n):
            
            dp[i] = share = (share + dp[i - delay] - dp[i - forget]) % mod
            
        return sum(dp[-forget:]) % mod
        
        
        
        
        

class Solution:
    def peopleAwareOfSecret(self, n: int, delay: int, forget: int) -> int:
        canTellToday = defaultdict(int)
        forgetsToday = defaultdict(int)
        
        peopleWithSecret = 1
        peopleWhoTellSecret = 0

        canTellToday[1+delay] = 1
        forgetsToday[1+forget] = 1  

        for day in range(1,n+1):
            peopleWhoTellSecret += canTellToday[day]
            
            peopleWithSecret -= forgetsToday[day]
            peopleWhoTellSecret -= forgetsToday[day]

            peopleWithSecret += peopleWhoTellSecret
            canTellToday[day+delay] += peopleWhoTellSecret
            forgetsToday[day+forget] += peopleWhoTellSecret

        return peopleWithSecret%(10**9+7)
